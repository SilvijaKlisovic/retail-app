@model RetailApp.Models.InvoiceLine

@{
    ViewBag.Title = "Kreiranje nove stavke računa";
}

<script>
    var viewModel = {
        Products: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ProductID.Items))
    };
</script>

<br>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RedniBroj, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RedniBroj, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.RedniBroj, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, "Šifra proizvoda", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductID", null, optionLabel: "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Kolicina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Kolicina, new { htmlAttributes = new { @class = "form-control", min = "0" } })
                @Html.ValidationMessageFor(model => model.Kolicina, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cijena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cijena, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Cijena, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ukupno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ukupno, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Ukupno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Kreiraj" class="btn btn-danger" /> |
                <button class="btn btn-info">@Html.ActionLink("Povratak", "Index") </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function setValue($element, value) {
            $element.val(value);
            $element.attr('value', value);
        }

        $(function () {
            $("#ProductID").kendoComboBox({
                select: function (e) {
                    var val = this.dataItem(e.item.index()).value;
                    for (i = 0; i < viewModel.Products.length; i++) {
                        if (val == viewModel.Products[i].ProductID) {
                            var c = viewModel.Products[i].CijenaProizvoda;
                            setValue($("#Cijena"), c);
                        }
                    }
                }
            });

            $('#Kolicina').on("change", function () {
                var cijenaValue = $("#Cijena").val();
                var kolicina = parseInt($('#Kolicina').val());
                if (cijenaValue != "") {
                    var cijena = parseFloat(cijenaValue);
                    setValue($("#Ukupno"), cijena * kolicina);
                }
            });
        });
    </script>
}
